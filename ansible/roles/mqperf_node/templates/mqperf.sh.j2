#!/bin/sh

start() {
	echo "Starting $mqperf_type ..."
	[ -e /tmp/mqperf.log ] && rm /tmp/mqperf.log
	HOST_ID={{ play_hosts.index(inventory_hostname) }} java -XX:CompileCommand="exclude,java/lang/Object.wait" -cp /opt/mqperf/mqperf-assembly-deps.jar:/opt/mqperf/mqperf-assembly.jar -Dconfig.file=/tmp/test-config.json com.softwaremill.mqperf.{{ mqperf_type }} > /tmp/mqperf.log 2>&1 &
}

stop() {
	echo "Shutting down ..."
	for pid in `ps aux | grep "com.softwaremill.mqperf.{{ mqperf_type }}" | grep -v grep | tr -s ' ' | cut -d ' ' -f 2`; do
		echo "killing process $pid ..."
		kill -9 $pid
	done
}

status() {
    pid=`ps aux | grep "com.softwaremill.mqperf.{{ mqperf_type }}" | grep -v grep | awk -F' ' ' {print $2}'`
	if [ -z $pid ]; then
		echo "Stopped"
		exit 1
	else
	    if grep -q "Closing mq" /tmp/mqperf.log ; then 
		    sleep 2m # sometimes leaves dangling threads even though all mq threads are done
		    kill $pid 2>/dev/null
			echo "Stopped"
			exit 1
		fi
		echo "Running"
		exit 0
	fi
}

case "$1" in
	start) 	start ;;
	stop) 	stop ;;
	status)	status ;;
	*) 		echo "usage: $0 start|stop|status" >&2
			exit 1
			;;
esac
