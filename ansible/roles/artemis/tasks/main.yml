---
- name: Install libaio module (used for persistence)
  package:
    name:   libaio
    state:  installed

- name: Create artemis user
  user:
    name: "{{ artemis_username }}"
    shell: /bin/bash

- name: Download artemis
  get_url:
    dest: "{{ artemis_download_dest }}"
    url:  "{{ artemis_download_url }}"
    
- name: Unpack archive
  unarchive:
    copy:    no
    dest:    /opt
    src:     "{{ artemis_download_dest }}"
    creates: /opt/{{ artemis_name }}
    owner:   "{{ artemis_username }}"

- name: Create user-friendly link
  file:
    state: link
    src: /opt/{{ artemis_name }}
    dest: /opt/artemis

- set_fact: artemis_broker_master_1="{{ groups['artemis'][0] }}"
- set_fact: artemis_broker_master_2="{{ groups['artemis'][1] }}"
- set_fact: artemis_broker_master_3="{{ groups['artemis'][2] }}"
- set_fact: artemis_broker_slave_1="{{ groups['artemis'][3] }}"
- set_fact: artemis_broker_slave_2="{{ groups['artemis'][4] }}"
- set_fact: artemis_broker_slave_3="{{ groups['artemis'][5] }}"

- name: Set hostname master 1/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_master_1"
  with_items:
    - "{{ artemis_broker_master_1 }}"

- name: Set hostname master 2/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_master_2"
  with_items:
    - "{{ artemis_broker_master_2 }}"

- name: Set hostname master 3/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_master_3"
  with_items:
    - "{{ artemis_broker_master_3 }}"

- name: Set hostname slave 1/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_slave_1"
  with_items:
    - "{{ artemis_broker_slave_1 }}"

- name: Set hostname slave 2/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_slave_2"
  with_items:
    - "{{ artemis_broker_slave_2 }}"

- name: Set hostname slave 3/3
  run_once: true
  delegate_to: "{{ item }}"
  hostname:
    name: "artemis_broker_slave_3"
  with_items:
    - "{{ artemis_broker_slave_3 }}"

- name: Create master brokers
  run_once: true
  delegate_to: "{{ item }}"
  command: |
    /opt/{{ artemis_name }}/bin/artemis 
    create 
    /opt/{{ artemis_name }}-broker/ 
    --user artemis 
    --password artemis 
    --allow-anonymous 
    --clustered 
    --host "{{ hostvars[item].private_ip_address }}"
    --cluster-user artemis 
    --cluster-password artemis
    --force
  with_items:
    - "{{ artemis_broker_master_1 }}"
    - "{{ artemis_broker_master_2 }}"
    - "{{ artemis_broker_master_3 }}"

- name: Create slave brokers
  run_once: true
  delegate_to: "{{ item }}"
  command: |
    /opt/{{ artemis_name }}/bin/artemis 
    create 
    /opt/{{ artemis_name }}-broker/ 
    --user artemis 
    --password artemis 
    --allow-anonymous 
    --clustered 
    --host "{{ hostvars[item].private_ip_address }}"
    --cluster-user artemis 
    --cluster-password artemis
    --force
  with_items:
    - "{{ artemis_broker_slave_1 }}"
    - "{{ artemis_broker_slave_2 }}"
    - "{{ artemis_broker_slave_3 }}"

- set_fact:
    tmpl_var_replication_policy:  "<master/>"
  run_once: true
  delegate_to: "{{ item }}"
  with_items:
    - "{{ artemis_broker_master_1 }}"
    - "{{ artemis_broker_master_2 }}"
    - "{{ artemis_broker_master_3 }}"

- name: Copy broker.xml.j2 to master
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=broker.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/broker.xml
  with_items:
    - "{{ artemis_broker_master_1 }}"
    - "{{ artemis_broker_master_2 }}"
    - "{{ artemis_broker_master_3 }}"

- name: Copy bootstrap.xml.j2 to master
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=bootstrap.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/bootstrap.xml
  with_items:
    - "{{ artemis_broker_master_1 }}"
    - "{{ artemis_broker_master_2 }}"
    - "{{ artemis_broker_master_3 }}"

- name: Copy jolokia-access.xml to master
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=jolokia-access.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/jolokia-access.xml
  with_items:
    - "{{ artemis_broker_master_1 }}"
    - "{{ artemis_broker_master_2 }}"
    - "{{ artemis_broker_master_3 }}"

- set_fact:
    tmpl_var_replication_policy:  "<slave/>"
  run_once: true
  delegate_to: "{{ item }}"
  with_items:
    - "{{ artemis_broker_slave_1 }}"
    - "{{ artemis_broker_slave_2 }}"
    - "{{ artemis_broker_slave_3 }}"

- name: Copy broker.xml.j2 to slave 1,2,3
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=broker.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/broker.xml
  with_items:
    - "{{ artemis_broker_slave_1 }}"
    - "{{ artemis_broker_slave_2 }}"
    - "{{ artemis_broker_slave_3 }}"

- name: Copy bootstrap.xml.j2 to slave 1,2,3
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=bootstrap.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/bootstrap.xml
  with_items:
    - "{{ artemis_broker_slave_1 }}"
    - "{{ artemis_broker_slave_2 }}"
    - "{{ artemis_broker_slave_3 }}"

- name: Copy jolokia-access.xml to slave 1,2,3
  run_once: true
  delegate_to: "{{ item }}"
  template:
    src=jolokia-access.xml.j2
    dest=/opt/{{ artemis_name }}-broker/etc/jolokia-access.xml
  with_items:
    - "{{ artemis_broker_slave_1 }}"
    - "{{ artemis_broker_slave_2 }}"
    - "{{ artemis_broker_slave_3 }}"

- name: Copy systemd artemis.service to all nodes
  template:
    src=artemis.service.j2
    dest=/lib/systemd/system/artemis.service

- name: Change broker's owner
  file:
    path: /opt/{{ artemis_name }}-broker/
    owner: "{{artemis_username}}"
    group: "{{artemis_username}}"
    recurse: true

- name: Increase xmx
  replace:
    path: /opt/{{ artemis_name }}-broker/etc/artemis.profile
    regexp: 'Xmx2G'
    replace: 'Xm16G -XX:+AlwaysPreTouch'
    backup: yes

- name: Start artemis
  environment:
    ARTEMIS_USER: "{{artemis_username}}"
  service:
    name: artemis
    state: restarted
